Сортировка перемешиванием, или Шейкерная сортировка, или двунаправленная (англ. Cocktail sort) — разновидность пузырьковой сортировки. 

Алгоритм расширяет пузырьковую сортировку, работая в двух направлениях. Хотя он улучшает пузырьковую сортировку, быстрее перемещая элементы в начало списка, он обеспечивает лишь незначительное повышение производительности. Как и 
большинство вариантов пузырьковой сортировки, сортировка коктейльным шейкером используется в основном как образовательный инструмент.


Анализируя метод пузырьковой сортировки, можно отметить два обстоятельства:
Во-первых, если при движении по части массива перестановки не происходят, то эта часть массива уже отсортирована и, следовательно, её можно исключить из рассмотрения.
Во-вторых, при движении от конца массива к началу минимальный элемент «всплывает» на первую позицию, а максимальный элемент сдвигается только на одну позицию вправо.

Эти две идеи приводят к следующим модификациям в методе пузырьковой сортировки. Границы рабочей части массива (то есть части массива, где происходит движение) устанавливаются в месте ПОСЛЕДНЕГО обмена на 
каждой итерации. Массив просматривается поочередно справа налево и слева направо.

Лучший случай для этой сортировки — отсортированный массив O(n), худший — отсортированный в обратном порядке O(n^2).

Код (написал сам)

void CocktailSort(int* arr,  const int size) {
	int left = 0;
	int right = size - 1;
	int lastSwap = 0;

	while (left < right) {
		for (int i = left; i < right; ++i) {
			if (arr[i] > arr[i + 1]) {
				std::swap(arr[i], arr[i + 1]);
				lastSwap = i;
			}	
		}
		right = lastSwap;

		for (int i = right; i > left; --i) {
			if (arr[i] < arr[i - 1]) {
				std::swap(arr[i], arr[i - 1]);
				lastSwap = i;
			}	
		}
		left = lastSwap;
	}
}

###
Оффтоп: std::swap снижает скорость для простых типов, но увеличивает для сложных.